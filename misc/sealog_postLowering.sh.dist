#!/bin/bash
#
# Purpose: This script backs up sealog data to file.  The backup includes the
#          cruise record, lowering records, event_templates, event records and
#          ancillary data.
#
#   Usage: Type sealog_postLowering.sh [-d dest_dir] [-c cruise_id] <lowering_id> to run the script.
#          - [-d dest_dir] --> where to save the data, the default location
#                              is defined in the BACKUP_DIR_ROOT variable
#          - [-c dest_dir] --> the cruise ID (RR1802).  If this is defined 
#                              the script will first create a folder with 
#                              the cruiseID and then save the lowering data 
#                              within that directory 
#          - <lowering_id> --> the lowering ID (J2-1042)
#
#  Author: Webb Pinner webbpinner@gmail.com
# Created: 2018-09-26
# Updated: 2020-01-26

SCRIPT_BASE=`dirname $0`

GET_CRUISE_SCRIPT='python3 '${SCRIPT_BASE}'/sealog-utils-getCruise.py'
GET_CRUISE_UID_SCRIPT='python3 '${SCRIPT_BASE}'/sealog-utils-getCruiseUID.py'
GET_EVENT_AUX_DATA_SCRIPT='python3 '${SCRIPT_BASE}'/sealog-utils-getEventAuxData.py'
GET_EVENT_EXPORTS_SCRIPT='python3 '${SCRIPT_BASE}'/sealog-utils-getEventExports.py'
GET_EVENT_TEMPLATES_SCRIPT='python3 '${SCRIPT_BASE}'/sealog-utils-getEventTemplates.py'
GET_EVENTS_SCRIPT='python3 '${SCRIPT_BASE}'/sealog-utils-getEvents.py'
GET_FRAMEGRAB_SCRIPT='python3 '${SCRIPT_BASE}'/sealog-utils-getFramegrabList.py'
GET_LOWERING_SCRIPT='python3 '${SCRIPT_BASE}'/sealog-utils-getLowering.py'
GET_LOWERING_UID_SCRIPT='python3 '${SCRIPT_BASE}'/sealog-utils-getLoweringUID.py'

# Root data folder for Sealog
BACKUP_DIR_ROOT="/home/sealog/sealog-backups"
FILES_DIR="/home/sealog/sealog-files"
FRAMEGRAB_DIR="images"
CRUISE_ID=""
CRUISE_OID=""
LOWERING_ID=""
LOWERING_OID=""

getLoweringDataFiles(){

	echo "Exporting lowering record"
	${GET_LOWERING_SCRIPT} ${LOWERING_ID} > ${LOWERING_DIR}'/'${LOWERING_ID}'_loweringRecord.json'

	echo "Exporting event data"
	${GET_EVENTS_SCRIPT} -l ${LOWERING_ID} > ${LOWERING_DIR}'/'${LOWERING_ID}'_eventOnlyExport.json'

	echo "Exporting aux data"
	${GET_EVENT_AUX_DATA_SCRIPT} -l ${LOWERING_ID} > ${LOWERING_DIR}'/'${LOWERING_ID}'_auxDataExport.json'

	echo "Exporting events with aux data as json"
	${GET_EVENT_EXPORTS_SCRIPT} -l ${LOWERING_ID} > ${LOWERING_DIR}'/'${LOWERING_ID}'_sealogExport.json'

	echo "Exporting events with aux data as csv"
	${GET_EVENT_EXPORTS_SCRIPT} -f csv -l ${LOWERING_ID} > ${LOWERING_DIR}'/'${LOWERING_ID}'_sealogExport.csv'
}

getLoweringNonDataFiles(){
	echo "Copying non-data lowering files"

    mkdir ${BACKUP_DIR_ROOT}/${LOWERING_ID}/files
    if [ ! -d ${BACKUP_DIR_ROOT}/${LOWERING_ID}/files ]; then
            echo "Unable to create non-data files directory... quiting"
            exit 1
    fi

	rsync -a ${FILES_DIR}/${LOWERING_OID}/* ${BACKUP_DIR_ROOT}/${LOWERING_ID}/files
}

getFramegrabs(){
	${GET_FRAMEGRAB_SCRIPT} -l ${LOWERING_ID}
}

usage(){
cat <<EOF
Usage: $0 [-?] [-d dest_dir] [-c cruise_id] <lowering_id>
	-d <dest_dir>   Where to store the backup, the default is:
	                ${BACKUP_DIR_ROOT}
	-c <cruise_id>  The cruise id for the lowering, if specified
	                the lowering backup will be stored within a 
	                <cruise_id> directory. 
	-?              Print this statement.
	<lowering_id>   The lowering ID i.e. 'J2-1107'
EOF
}

while getopts ":d:c:" opt; do
  case $opt in
   d)
      BACKUP_DIR_ROOT=${OPTARG}
      ;;
   c)
      CRUISE_ID="${OPTARG}"
      ;;

   \?)
      usage
      exit 0
      ;;
  esac
done

shift $((OPTIND-1))

if [ $# -ne 1 ]; then
        echo ""
        echo "Missing lowering number"
        echo ""
        usage
        exit 1
fi

LOWERING_ID="${1}"

if [ ${CRUISE_ID} != "" ]; then
	CRUISE_OID=`${GET_CRUISE_UID_SCRIPT} ${CRUISE_ID}`

	if [ -z ${CRUISE_OID} ]; then
		echo ""
		echo "Unable to find cruise data for cruise id: ${CRUISE_ID}"
		echo ""
		exit 1
	fi

fi

LOWERING_OID=`${GET_LOWERING_UID_SCRIPT} ${1}`
if [ -z ${LOWERING_OID} ]; then
	echo ""
	echo "Unable to find lowering data for lowering id: ${1}"
	echo ""
	exit 1
fi


if [ ! -z ${CRUISE_ID} ]; then
	BACKUP_DIR=${BACKUP_DIR_ROOT}/${CRUISE_ID}
else
	BACKUP_DIR=${BACKUP_DIR_ROOT}
fi

echo ""
echo "-----------------------------------------------------"
echo "Backup Directory:" ${BACKUP_DIR}/${LOWERING_ID}
echo "-----------------------------------------------------"
read -p "Continue? (Y/N): " confirm && [[ $confirm == [Yy] || $confirm == [Yy][Ee][Ss] ]] || exit 1
echo ""

LOWERING_DIR=${BACKUP_DIR}/${LOWERING_ID}

if [ ! -d ${LOWERING_DIR} ]; then
    read -p "Create backup directory? (Y/N): " confirm && [[ $confirm == [Yy] || $confirm == [Yy][Ee][Ss] ]] || exit 1
    mkdir -p ${LOWERING_DIR}
    if [ ! -d ${LOWERING_DIR} ]; then
            echo "Unable to create backup directory... quiting"
            exit 1
    fi
    mkdir ${LOWERING_DIR}/${FRAMEGRAB_DIR}
    if [ ! -d ${LOWERING_DIR}/${FRAMEGRAB_DIR} ]; then
            echo "Unable to create framegrab directory... quiting"
            exit 1
    fi
fi

if [ ${CRUISE_OID} != '' ]; then
	echo "Exporting cruise record"
	${GET_CRUISE_SCRIPT} ${CRUISE_ID} > ${BACKUP_DIR}'/'${CRUISE_ID}'_cruiseRecord.json'

	# echo "Export event templates"
	${GET_EVENT_TEMPLATES_SCRIPT} > ${BACKUP_DIR}'/'${CRUISE_ID}'_eventTemplates.json'
fi

echo "Exporting event templates"
${GET_EVENT_TEMPLATES_SCRIPT} > ${LOWERING_DIR}'/'${LOWERING_ID}'_eventTemplates.json'

getLoweringDataFiles

getLoweringNonDataFiles

getFramegrabs | awk -v dest=${LOWERING_DIR}/${FRAMEGRAB_DIR} 'BEGIN{printf "#!/bin/bash\nDEST_DIR=%s\n", dest} {printf "cp -v %s ${DEST_DIR}/\n", $0}' > ${LOWERING_DIR}/${LOWERING_ID}_framegrabCopyScript.sh
pico ${LOWERING_DIR}/${LOWERING_ID}_framegrabCopyScript.sh
echo ""

read -p "Proceed with copying framegrabs? (Y/N): " confirm && [[ $confirm == [Yy] || $confirm == [Yy][Ee][Ss] ]] || exit 0
echo ""

echo "Copying framegrabs"
chmod +x ${LOWERING_DIR}/${LOWERING_ID}_framegrabCopyScript.sh

which pv > /dev/null
if [ $? == 0 ]; then
	pv -p -w 80 ${LOWERING_DIR}/${LOWERING_ID}_framegrabCopyScript.sh | bash > /dev/null
else
	/bin/bash ${LOWERING_DIR}/${LOWERING_ID}_framegrabCopyScript.sh
fi

echo "Done!"
echo ""
